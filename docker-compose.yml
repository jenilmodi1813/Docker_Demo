services:
  service-registry:
    build:
      context: ./MainServiceRegistry
    container_name: main-service-registry
    ports:
      - "8761:8761"
    networks:
      - app-network

  user-service:
    build:
      context: ./UserService
    container_name: user-service-container
    ports:
      - "8081:8080"
    depends_on:
      - service-registry
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-container:5432/microservices
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka
    networks:
      - app-network

  hotel-service:
    build:
      context: ./HotelService
    container_name: hotel-service-container
    ports:
      - "8091:8082"
    depends_on:
      - service-registry
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-container:5432/microservices
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka
    networks:
      - app-network

  rating-service:
    build:
      context: ./NewRatingService
    container_name: rating-service-container
    ports:
      - "8083:8083"
    depends_on:
      - service-registry
      - mongo
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/microservices
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka
    networks:
      - app-network

  postgres:
    image: postgres:16
    container_name: postgres-container
    environment:
      POSTGRES_DB: microservices
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  mongo:
    image: mongo:6
    container_name: mongo-container
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
 